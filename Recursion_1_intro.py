#Recursion
#Рекурсия это когда функция вызывает саму себя.
#1 создадим функцию с названием rec(), она будет принимать один аргумент.
def rec(x):
    # внутри функции будем печатать этот аргумент
    print(x)
    # и вновь будем вызывать rec() от того же аргумента
    rec(x)
# глобальной области видимости вызовем эту функцию от значения 1. 
# результат даст много еднерок в столбик и потом получаем ошибку maximum recursion depth exceeded while calling a Python object
# то есть в Python есть ограничение на глубину вызовов внутри рекурсии. 
#rec(1)
#2 давайте примерно оценивать сколько раз мы можем 
# рекурсивно вызывать.
def rec(x):
    print(x)
    # здесь мы можем передавать от аргумента на 1 больше.
    rec(x+1)
# получили результат около 3000
rec(1)
#3 в рекурсии должен быть ВЫХОД!!! 
def rec(x):
    #4 давайте сделаем условие. если число x меньше 4,  то 
    # мы будем печатать это число и вновь вызывать рекурсивную 
    # функцию. В случае если не выполняется наше условие, то 
    # произойдет выход из рекурсии. 
    if x<4:
        # мы будем печатать это число и вновь вызывать рекурсивную функцию. 
        print(x)
    # здесь мы можем передавать от аргумента на 1 больше.
        rec(x+1)
    # здесь тоже будем печатать
        print(x)
# получили результат около 3000
rec(1)
#Обьясним, что сделали. Сперва в глобальной области видимости 
# мы вызываем rec(1) и передаем ей значение 1, которой локальной переменной х.
# Так как 1<4, мы сперва печатаем 1, и затем там, где rec(x+1) 
# происходит вызов ф-ии rec, которой передается значение 2, то есть х = 2. Она 
# идет тоже в локальную переменную, но которая относится уже к этой функции rec x=2.
# . В этот момент наша программа переключается на rec со значением 2. А первая 
# функция rec x=1 приостановливает/замораживает свое выполнение. Мы теперь 
# находимся внутри функции со значением 2 и начинаем выполнять ее с самого начала, то есть 
# проверяем 2<4 и это верно. где первая print(x) печатаем значение 2, и вызывается вновь 
# reс х = 3, теперь выполнение программы переключается на эту функцию, 
# а rec x=2 замораживается. Опять же rec x=3 мы выполняем с самого 
# начала, то есть 3<4, мы печатаем 3 и вызываем rec4. Переключаемся 
# внутри этой функции, и наше условие if x<4: не выполняется, то есть приосходит 
# выход из рекурсии. и мы возвращаемся в ту функцию, которая вызывала rec4. 
# а это функция от rec3. В ней выполнились первая print(x) и rec(x+1), 
# но не выполнилась вторая print(x). В print(x) мы выводим значение локальной 
# переменной x, а у нас это 3 и наша функция заканчивает свое выполнение 
# и мы возвращаемся назад к той, которая нас вызывала rec x=2. Там выводим 
# локальную переменную x=2 через вторую print(x). оттуда возвращаемся к 
# той функции которая вызывала x=2. а это rec x=1. и все наша программа завершается тогда.
# 