#Lambda function
# обычные функции. давали какое то имя функции, говорили какие 
# аргументы она принимает, и в самом простом случае писали что она 
# возвращает. При использовании инструкции def мы создаем функцию, 
# которая связывается с определенным именем. В данном случае наше 
# имя это f. И соответственно для того чтобы  вызвать эту функцию мы 
# должны обратиться к этому имени. 
# Можем создавать функции которые не имеет имени или по другому анонимные 
# функции. Для этого понадобится ключевое слово lambda. Синтаксис такой lambda аргумент: 
# 1
def f(x):
    return x ** 2
print(f(4))

# lambda x: x ** 2 # эту функцию мы не можем проверить, так как нет имени у нее и 
# не можем к ней обратиться. чтобы проверить ее работоспособность, мы присвоим ей имя
##r = lambda x: x ** 2 
# и внутри print вызываем r и передаем ей аргумент. Она должна вызвать квадрат 
# этого числа, то есть 7 = x. Мы тут не указывали имя и слово return. 
##print(r(7))
# LAMBDA ИСППОЛЬЗУЕТСЯ КОГДА НАМ НЕОБХОДИМО НАПИСАТЬ ФУНКЦИЮ В КОТОРОЙ 
# ВЫПОЛНЯЕТСЯ ОДНО ТОЛЬКО ДЕЙСТВИЕ ИЛИ ФУНКЦИЮ В ОДНУ СТРОЧКУ.

# Пример 2
def perimetr(a, b, c):
    return a + b + c # мы написали через слово def

# теперь напишем через слово lambda
h = lambda : 'hello' # можно написать функцию, 
# которая не принимает ни одних аргументов
per = lambda a, b, c: a + b + c
r = lambda x: x**2
# вызываем perimetr и per получаем аналогичный результат
print(perimetr(1,2,3))
print(per(1,2,3))
# 3
h = lambda : 'hello' # можно написать функцию, 
# которая не принимает ни одних аргументов
print(h())
# LAMBDA ЗАМеняет только те функции, в которых 
# содержится СЛОВО RETURN, то есть функции 
# которые НИЧЕГО НЕ ВОЗЫРАЩАЕТ она заменить не может. 
# 4
# при помощи lambda НЕЛЬЗЯ РЕАЛИЗОВАТЬ ФУНКЦИИ, в 
# которых СОДЕРЖАТСЯ ЦИКЛЫ. 
# 5 
# Внутри lambda пишется только одно выражение вот так: t = lambda x: 'positive' if x>0 else 'negative'
# блоки конструкции в лестницу не допускается. 
def f(x):
    if x > 0:
        return 'positive'
    return 'negative'
t = lambda x: 'positive' if x>0 else 'negative'




